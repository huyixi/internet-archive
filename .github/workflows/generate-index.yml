name: Generate index.html

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  generate-index:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Generate index.html
        run: |
          repo_dir=$(pwd)
          output_file="$repo_dir/index.html"

          echo "<html><head><title>huyixi's Internet Archive</title><link rel=\"stylesheet\" href=\"css/index.css\"></head><body>" > $output_file
          echo "<h1>huyixi's Internet Archive</h1>" >> $output_file
          echo "<ul>" >> $output_file

          temp_file=$(mktemp)

          find $repo_dir -type f -name "*.html" ! -name "index.html" | while read file; do
            rel_path=$(realpath --relative-to="$repo_dir" "$file")

            echo "DEBUG: Processing file: $file"

            html_comment=$(perl -0777 -ne 'print $& if /<!--[\s\S]*?-->/g' "$file")
            echo "DEBUG: Found HTML comment: $html_comment"

            # 提取元数据
            title=$(echo "$html_comment" | perl -ne 'print $1 if /title: (.*?)(?:\n|$)/i')
            author=$(echo "$html_comment" | perl -ne 'print $1 if /author: (.*?)(?:\n|$)/i')
            date_from_file=$(echo "$html_comment" | perl -ne 'print $1 if /date: (\d{4}-\d{2}-\d{2})/i')

            echo "DEBUG: Extracted title: $title"
            echo "DEBUG: Extracted author: $author"
            echo "DEBUG: Extracted date: $date_from_file"

            if [ ! -z "$date_from_file" ]; then
              timestamp=$(date -d "$date_from_file" +%s)
              echo "DEBUG: Formatted date: $date_from_file"
              echo "DEBUG: Generated timestamp: $timestamp"
            else
              echo "DEBUG: No date found in HTML comment"
            fi

            echo "$timestamp|$rel_path|$date_from_file|$title|$author" >> $temp_file
          done

          # Sort by timestamp (newest first) and generate HTML links
          sort -rn $temp_file | while IFS='|' read -r timestamp path date title author url; do
            # 开始构建HTML
            echo -n "<li>" >> $output_file

            # 如果有标题就用标题，否则用文件路径
            if [ ! -z "$title" ]; then
              echo -n "<a href=\"$path\">$title</a>" >> $output_file
              # 如果后面还有author或date，就添加逗号
              if [ ! -z "$author" ] || [ ! -z "$date" ]; then
                echo -n "," >> $output_file
              fi
            else
              filename=$(basename "$path" .html)
              echo -n "<a href=\"$path\">$filename</a>" >> $output_file
              if [ ! -z "$author" ] || [ ! -z "$date" ]; then
                echo -n "," >> $output_file
              fi
            fi

            # 如果有作者就显示作者
            if [ ! -z "$author" ]; then
              echo -n " <span class=\"author\">$author</span>" >> $output_file
              # 只有当date存在时才在author后添加逗号
              if [ ! -z "$date" ]; then
                echo -n "," >> $output_file
              fi
            fi

            # 如果有日期就显示日期（最后一个变量，不需要逗号）
            if [ ! -z "$date" ]; then
              echo -n " <span class=\"date\">$date</span>" >> $output_file
            fi

            echo "DEBUG: [article] title: $title, author: $author, date: $date"

            echo "</li>" >> $output_file
          done

          # Clean up temporary file
          rm $temp_file

          echo "</ul>" >> $output_file
          echo "</body></html>" >> $output_file

      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add index.html
          git commit -m "Update index.html with new HTML files"
          git push
